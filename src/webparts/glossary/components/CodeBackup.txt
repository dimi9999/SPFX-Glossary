import * as React from 'react';
import styles from './Glossary.module.scss';
import { IGlossaryProps } from './IGlossaryProps';
import { IGlossary } from '../../../interface';

import { useEffect, useState } from 'react';
import { getSP } from '../../../pnpjsConfig';
//import { escape } from '@microsoft/sp-lodash-subset';
import { SPFI } from '@pnp/sp';
 
const Glossary = (props: IGlossaryProps) => {
const LOG_SOURCE = 'Glossary Web part';
// const LIST_NAME = 'IMS%20Glossary';
   const LIST_NAME = 'EWR Glossary';
let _sp:SPFI = getSP(props.context);

const [glossaryItems, setGlossaryItems] = React.useState<IGlossary[]>([])
const getGlossaryItems = async() => {

    
    const allItems: IGlossary[] = [];

    console.log('context', _sp);

    const itemsPerPage = 50; // You can adjust this based on your needs
    const [currentPage, setCurrentPage] = React.useState<number>(1);
    const [totalPages, setTotalPages] = React.useState<number>(1);

      // const items = _sp.web.lists.getByTitle(LIST_NAME).items();
      // Loop until all items are fetched
      while (true) {
        const items = await _sp.web.lists.getByTitle(LIST_NAME).items.select().orderBy('TopFilter',true).orderBy('Title',true)();

      // Break the loop if no more items
      if (items.length === 0) {
          break;
      }
    
      console.log('GLOSSARY ITEMS',items);
      allItems.push(
        ...items.map((item) => {
      //setGlossaryItems((await items).map((item) => {
        return {
          Id: item.Id,
          TopFilter: item.TopFilter,
          Title: item.Title,
          Term: item.Term,
          Tags: item.Tags,
          Abbreviation_x002f_Acronym: item.Abbreviation_x002f_Acronym,
          Definition: item.Definition,
          Contact: item.Contact,
          Category: item.Category
          
       };
            })
        );

         
    }

    setGlossaryItems(allItems);
};

useEffect(() => {
  getGlossaryItems();
},[])


  return (
    <div className={styles.glossary}> 
    <h1>Welcome to EWR Glossary - Your Terms Defined</h1>
    <pre>{JSON.stringify(glossaryItems,null,2)}</pre>
    </div>
  )
}
export default Glossary 